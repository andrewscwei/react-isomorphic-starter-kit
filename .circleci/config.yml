version: 2
jobs:
  build_and_test:
    working_directory: ~/repo
    docker:
      - image: node:8.9.4
    environment:
      - DOCKER_VERSION: 17.03.1-ce
    steps:
      - checkout
      - run:
          name: Install Docker
          command: |
            set -x
            curl -L -o /tmp/docker-$DOCKER_VERSION.tgz https://get.docker.com/builds/Linux/x86_64/docker-$DOCKER_VERSION.tgz
            tar -xz -C /tmp -f /tmp/docker-$DOCKER_VERSION.tgz
            mv /tmp/docker/* /usr/bin
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}
            - dependency-cache-
      - run:
          name: Install NPM dependencies
          command: yarn
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - "node_modules"
      - run:
          name: Build
          command: npm run build
      - run:
          name: Test
          command: npm test
      - store_artifacts:
          path: ~/repo/build
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build --rm=false --build-arg NODE_ENV=production --build-arg PUBLIC_PATH=$PUBLIC_PATH -t $CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 .

  build_test_and_deploy:
    working_directory: ~/repo
    docker:
      - image: node:8.9.4
    environment:
      - DOCKER_VERSION: 17.03.1-ce
    steps:
      - checkout
      - run:
          name: Install Docker
          command: |
            set -x
            curl -L -o /tmp/docker-$DOCKER_VERSION.tgz https://get.docker.com/builds/Linux/x86_64/docker-$DOCKER_VERSION.tgz
            tar -xz -C /tmp -f /tmp/docker-$DOCKER_VERSION.tgz
            mv /tmp/docker/* /usr/bin
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}
            - dependency-cache-
      - run:
          name: Install NPM dependencies
          command: yarn
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - "node_modules"
      - run:
          name: Build
          command: npm run build
      - run:
          name: Test
          command: npm test
      - store_artifacts:
          path: ~/repo/build
      - setup_remote_docker
      - deploy:
          name: Deploy
          command: |
            docker login -u "$HEROKU_LOGIN" -p "$HEROKU_API_KEY" registry.heroku.com
            docker build --rm=false --build-arg NODE_ENV=production --build-arg PUBLIC_PATH=$PUBLIC_PATH -t registry.heroku.com/$CIRCLE_PROJECT_REPONAME/web:$CIRCLE_SHA1 .
            docker push registry.heroku.com/$CIRCLE_PROJECT_REPONAME/web:$CIRCLE_SHA1

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_test_and_deploy:
          filters:
            tags:
              ignore: /^v.*/
  build_test_and_deploy:
    jobs:
      - build_test_and_deploy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
