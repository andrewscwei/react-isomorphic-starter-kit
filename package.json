{
  "name": "react-isomorphic-starter-kit",
  "version": "16.1.0",
  "private": true,
  "license": "MIT",
  "type": "module",
  "scripts": {
    "start": "npm run start:${RUNTIME:-server}",
    "start:server": "node build",
    "start:static": "http-server build",
    "start:edge": "wrangler pages dev --port=8080 --compatibility-date=2024-06-22 ./build",
    "start:container": "docker run -it --rm -p ${PORT:-8080}:8080 --name app ${IMAGE_NAME:-app}:${IMAGE_TAG:-latest}",
    "clean": "rimraf build",
    "predev:server": "npm run clean",
    "predev:static": "npm run clean",
    "predev:edge": "npm run clean",
    "dev": "nodemon --exec 'tsx -r dotenv/config' -V -w src -e ts,json src/index",
    "_dev": "npm run dev:${RUNTIME:-static}",
    "dev:server": "tsx src/index.ts",
    "_dev:server": "cross-env NODE_ENV=development concurrently -n server,main -c magenta,cyan \"npm:bundle:server -- --watch\" \"wait-on build && DEBUG=server* nodemon --exec 'node -r dotenv/config' --watch build build\"",
    "dev:static": "vite dev",
    "_dev:static": "cross-env NODE_ENV=development concurrently -n server,main -c magenta,cyan \"webpack --config config/build.dev.conf.ts --watch\" \"wait-on build && DEBUG=server* nodemon --exec 'node -r dotenv/config' --watch build build\"",
    "dev:edge": "concurrently -n client,edge,main -c green,blue,cyan \"npm:bundle:client -- --watch\" \"wait-on build && npm run bundle:edge -- --watch\" \"wait-on build/index.js && wrangler pages dev --port=8080 --compatibility-date=2024-06-22 ./build\"",
    "_prebuild:server": "npm run lint && npm run clean",
    "_prebuild:static": "npm run lint && npm run clean",
    "_prebuild:edge": "npm run lint && npm run clean",
    "build": "npm run build:${RUNTIME:-server}",
    "build:server": "vite build --ssr main.server.tsx --outDir ../build/server",
    "_build:server": "cross-env-shell BUILD_NUMBER=${BUILD_NUMBER:-$(git rev-parse --short HEAD)} \"npm run bundle:client && npm run bundle:server\"",
    "build:static": "vite build --ssrManifest --outDir ../build/client",
    "_build:static": "npm run build && ts-node ./config/scripts/export",
    "build:edge": "cross-env-shell BUILD_NUMBER=${BUILD_NUMBER:-$(git rev-parse --short HEAD)} \"npm run bundle:client && npm run bundle:edge\"",
    "build:container": "docker build -t ${IMAGE_NAME:-app}:${IMAGE_TAG:-latest} .",
    "bundle:client": "webpack --config config/build.client.conf.ts",
    "bundle:server": "webpack --config config/build.server.conf.ts",
    "bundle:edge": "webpack --config config/build.edge.conf.ts",
    "test": "npm run test:${RUNTIME:-server}",
    "test:server": "RUNTIME=server playwright test",
    "test:static": "RUNTIME=static playwright test",
    "test:edge": "RUNTIME=edge playwright test",
    "test:unit": "jest --testEnvironment=jsdom --config=config/test.conf.ts src/$npm_config_files",
    "ship": "docker run -it --rm --name ${npm_package_name} -p 8080:8080 ${npm_package_name}:latest",
    "ship:clean": "IMAGES=$(docker images | awk '$1 ~ /^'$(echo ${npm_package_name} | sed -e \"s/\\//\\\\\\\\\\//g\")'/ {print $3}') && if [ \"${IMAGES}\" != \"\" ]; then docker rmi -f ${IMAGES}; fi && docker system prune -f",
    "ship:build": "docker build -t ${npm_package_name}:latest .",
    "preship:dev": "docker build --target dev -t ${npm_package_name}:dev .",
    "ship:dev": "docker run -it --rm --name ${npm_package_name} -p 8080:8080 -v ./src:/var/app/src ${npm_package_name}:dev npm run dev",
    "lint": "npm run lint:ts && npm run lint:css",
    "lint:fix": "npm run lint:ts:fix && npm run lint:css:fix",
    "lint:ts": "eslint",
    "lint:ts:fix": "npm run lint:ts -- --fix",
    "lint:css": "stylelint src/**/*.css",
    "lint:css:fix": "npm run lint:css -- --fix",
    "scan": "dotenv -- sh -c 'sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.token=$SONAR_TOKEN'"
  },
  "devDependencies": {
    "@cloudflare/workers-types": "^4.20240620.0",
    "@eslint/js": "^9.5.0",
    "@fullhuman/postcss-purgecss": "^6.0.0",
    "@playwright/test": "^1.44.1",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@stylistic/eslint-plugin": "^2.2.2",
    "@testing-library/react": "^16.0.0",
    "@types/debug": "^4.1.12",
    "@types/express": "^4.17.21",
    "@types/node": "^20.14.8",
    "@types/postcss-import": "^14.0.3",
    "@types/postcss-preset-env": "^8.0.0",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@types/react-router-dom": "^5.3.3",
    "@types/sprintf-js": "^1.1.4",
    "@types/supertest": "^6.0.2",
    "@vitejs/plugin-react": "^4.3.1",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "dotenv": "^16.4.5",
    "dotenv-cli": "^7.4.2",
    "eslint": "^9.5.0",
    "nodemon": "^3.1.4",
    "postcss-import": "^16.1.0",
    "postcss-loader": "^8.1.1",
    "postcss-preset-env": "^9.5.14",
    "rimraf": "^5.0.7",
    "semantic-release": "^24.0.0",
    "source-map-support": "^0.5.21",
    "stylelint": "^16.6.1",
    "supertest": "^7.0.0",
    "ts-node": "^10.9.2",
    "tsx": "^4.16.2",
    "typescript": "^5.5.2",
    "typescript-eslint": "^8.0.0-alpha.10",
    "vite": "^5.3.3",
    "vite-plugin-html": "^3.2.2",
    "vite-plugin-svgr": "^4.2.0",
    "vitest": "^1.6.0",
    "wait-on": "^7.2.0",
    "wrangler": "^3.61.0"
  },
  "dependencies": {
    "compression": "^1.7.4",
    "debug": "^4.3.5",
    "express": "~4.19.2",
    "fast-xml-parser": "^4.4.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router": "^6.23.1",
    "react-router-dom": "^6.23.1",
    "sirv": "^2.0.4",
    "sprintf-js": "^1.1.3"
  }
}
